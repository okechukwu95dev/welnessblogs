 model_name = model.__name__
            fields_data = []
            relationships_data = []

            for field in model._meta.get_fields():
                if field.is_relation:
                    # Determine the relationship type/direction
                    if field.many_to_one:
                        # This is a ForeignKey on 'model_name' pointing to field.related_model
                        relationship_type = "ManyToOne (ForeignKey)"
                        source = model_name
                        target = field.related_model.__name__
                    elif field.one_to_many:
                        # Reverse side of a ForeignKey
                        relationship_type = "OneToMany (Reverse FK)"
                        source = field.related_model.__name__
                        target = model_name
                    elif field.many_to_many:
                        relationship_type = "ManyToMany"
                        source = model_name
                        target = field.related_model.__name__
                    elif field.one_to_one:
                        relationship_type = "OneToOne"
                        source = model_name
                        target = field.related_model.__name__
                    else:
                        relationship_type = "Unknown"
                        source = model_name
                        target = field.related_model.__name__

                    relationships_data.append({
                        "field_name": field.name,
                        "relationship_type": relationship_type,
                        "source": source,
                        "target": target
                    })
                else:
                    # Non-relation field
                    fields_data.append({
                        "field_name": field.name,
                        "field_type": field.get_internal_type()
                    })

            result.append({
                "model_name": model_name,
                "fields": fields_data,
                "relationships": relationships_data
            })
